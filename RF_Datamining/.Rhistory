library(randomForest)
library(dplyr)
library(Metrics)
library(caret)
library(e1071)
palay <- DM_DataCleaningFinal
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
library(readxl)
DM_DataCleaningFinal <- read_excel("~/RLanguage Projects/Data mining Random Forest/DM_DataCleaningFinal.xlsx")
View(DM_DataCleaningFinal)
palay <- DM_DataCleaningFinal
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
print(palay)
topredict <- DataSetPredict
library(readxl)
DataSetPredict <- read_excel("~/RLanguage Projects/Data mining Random Forest/DataSetPredict.xlsx")
View(DataSetPredict)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
View(palay)
palay.rf <- randomForest(VOLUME OF PRODUCTION ~ ., data=palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
palay.rf <- randomForest('VOLUME OF PRODUCTION' ~ ., data=palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
palay.rf <- randomForest('VOLUME OF PRODUCTION' ~ ., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
View(palay)
rm(DM_DataCleaningFinal)
library(readxl)
DM_DataCleaningFinal <- read_excel("~/RLanguage Projects/Data mining Random Forest/DM_DataCleaningFinal.xlsx")
View(DM_DataCleaningFinal)
palay.rf <- randomForest('VOLUME OF PRODUCTION' ~ ., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
palay.rf <- randomForest('VOLUME OF PRODUCTION' ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
palay <- DM_DataCleaningFinal
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
plot(palay.rf)
predictions1 = predict(palay.rf, newdata=topredict)rm
print(predictions1)
predictions1 = predict(palay.rf, newdata=topredict)
View(topredict)
View(DM_DataCleaningFinal)
View(topredict)
View(topredict)
View(DataSetPredict)
View(DataSetPredict)
View(topredict)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
View(topredict)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
View(topredict)
rm(DataSetPredict)
library(readxl)
DataSetPredict <- read_excel("~/RLanguage Projects/Data mining Random Forest/DataSetPredict.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric"))
View(DataSetPredict)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
View(topredict)
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
plot(palay.rf)
predictions1 = predict(palay.rf, newdata=topredict)
print(predictions1)
View(palay.rf)
View(palay)
View(DataSetPredict)
rm(DataSetPredict)
library(readxl)
DataSetPredict <- read_excel("~/RLanguage Projects/Data mining Random Forest/DataSetPredict.xlsx")
View(DataSetPredict)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
rm(DataSetPredict)
library(readxl)
DataSetPredict <- read_excel("~/RLanguage Projects/Data mining Random Forest/DataSetPredict.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric"))
View(DataSetPredict)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
plot(palay.rf)
predictions1 = predict(palay.rf, newdata=topredict)
View(DataSetPredict)
View(palay)
sapply(palay)
sapply(palay, class)
sapply(topredict, class)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
View(palay)
palay <- DM_DataCleaningFinal
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
print(palay)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
plot(palay.rf)
predictions1 = predict(palay.rf, newdata=topredict)
print(predictions1)
predicted <- test
test <- DM_DataCleaningFinal[541:680,]
predicted <- test
predicted$VOLUME_OF_PRODUCTION <- predictions1
library(randomForest)
library(dplyr)
library(Metrics)
library(caret)
library(e1071)
palay <- DM_DataCleaningFinal[1:540,]
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
print(palay)
test <- DM_DataCleaningFinal[541:680,]
test$GEOLOCATION <- as.factor(test$GEOLOCATION)
test$YEAR <- as.integer(test$YEAR)
test$QUARTER <- as.factor(test$QUARTER)
test[is.na(test)] = 0
print(test)
set.seed(222)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
plot(palay.rf)
plot(palay.rf$rsq)
plot(palay.rf$mse)
predictions1 = predict(palay.rf, newdata=test)
print(predictions1)
rmse(test$VOLUMEOFPRODUCTION,predictions1)
rmsle(test$VOLUMEOFPRODUCTION,predictions1)
predicted <- test
predicted$VOLUME_OF_PRODUCTION <- predictions1
print(predicted)
rmse(test$VOLUMEOFPRODUCTION,predictions1)
library(randomForest)
library(dplyr)
library(Metrics)
library(caret)
install.packages(Metrics)
install.packages("Metrics")
library(Metrics)
rmse(test$VOLUMEOFPRODUCTION,predictions1)
rmsle(test$VOLUMEOFPRODUCTION,predictions1)
mape(predictions1, test$VOLUMEOFPRODUCTION)
plot(palay.rf)
plot(palay.rf$rsq)
plot(palay.rf$mse)
plot(palay.rf$rsq)
plot(palay.rf$mse)
barplot(palay.rf)
barplot(palay)
barplot(predictions1)
barplot(predicted)
predictions1 = predict(palay.rf, newdata=test)
View(topredict)
predictions2 = predict(palay.rf, newdata=topredict)
predictions2
plot(predictions2)
barplot(predictions2)
importance(palay.rf)
print(predicted)
predicted$VOLUME_OF_PRODUCTION <- predictions2
predicted$VOLUME_OF_PRODUCTION <- predictions1
predictions2
print(palay.rf)
palay.rf$rsq
barplot(palay)
barplot(palay$VOLUMEOFPRODUCTION)
plot(palay$VOLUMEOFPRODUCTION)
plot(palay)
barplot(palay$VOLUMEOFPRODUCTION,palay$QUARTER)
plot(palay$VOLUMEOFPRODUCTION,palay$QUARTER)
plot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
plot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
plot(palay.rf$rsq)
palay.rf$rsq
palay.rf$rsqSD
rmse(test$VOLUMEOFPRODUCTION,predictions1)
palay.rf$rrsq
summary(palay.rf$rsq)
plot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$QUARTER)
plot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
View(palay)
palay <- DM_DataCleaningFinal
View(palay)
plot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$QUARTER)
barplot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
plot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$QUARTER,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$QUARTER)
plot(palay$VOLUMEOFPRODUCTION,palay$year)
plot(palay$VOLUMEOFPRODUCTION,palay$year)
palay$YEAR <- as.factor(palay$YEAR)
plot(palay$VOLUMEOFPRODUCTION,palay$year)
plot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
plot(palay)
plot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
plot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
plot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
mae(palay.rf)
mae(predictions1)
mae(palay.rf,predictions1)
mae(palay)
rmse(test$VOLUMEOFPRODUCTION,predictions1)
rmsle(test$VOLUMEOFPRODUCTION,predictions1)
mape(predictions1, test$VOLUMEOFPRODUCTION)
log(rmse(test$VOLUMEOFPRODUCTION,predictions1))
log10(rmse(test$VOLUMEOFPRODUCTION,predictions1))
plot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
barplot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
palay <- DM_DataCleaningFinal
barplot(palay$YEAR,palay$VOLUMEOFPRODUCTION)
barplot(palay$VOLUMEOFPRODUCTION,palay$YEAR)
barplot(palay$VOLUMEOFPRODUCTION,palay$YEAR,xlab = "YEAR", ylab = "VOLUME OF PRODUCTION")
View(predicted)
load("C:/Users/HP/Downloads/5yr_predicts.RData")
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
print(palay)
topredict <- DataSetPredict
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~., data = palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
importance(palay.rf)
print(palay.rf)
load("C:/Users/HP/Downloads/5yr_predicts.RData")
load("C:/Users/HP/Downloads/5yr_predicts.RData")
library(randomForest)
library(dplyr)
library(Metrics)
library(caret)
library(e1071)
palay <- DM_DataCleaningFinal
palay$GEOLOCATION <- as.factor(palay$GEOLOCATION)
palay$YEAR <- as.integer(palay$YEAR)
palay$QUARTER <- as.factor(palay$QUARTER)
palay[is.na(palay)] = 0
print(palay)
topredict <- DataSetPredict[1:20,]
topredict$GEOLOCATION <- as.factor(topredict$GEOLOCATION)
topredict$YEAR <- as.integer(topredict$YEAR)
topredict$QUARTER <- as.factor(topredict$QUARTER)
topredict[is.na(topredict)] = 0
print(topredict)
palay.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
print(palay.rf)
plot(palay.rf)
predictions1 = predict(palay.rf, newdata=topredict)
print(predictions1)
predicted <- topredict
predicted$VOLUMEOFPRODUCTION <- predictions1
print(predicted)
palay2 <- rbind(palay,predicted)
print(palay2)
topredict2 <- DataSetPredict[21:40,]
topredict2$GEOLOCATION <- as.factor(topredict2$GEOLOCATION)
topredict2$YEAR <- as.integer(topredict2$YEAR)
topredict2$QUARTER <- as.factor(topredict2$QUARTER)
topredict2[is.na(topredict2)] = 0
print(topredict2)
palay2.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay2, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
print(palay2.rf)
plot(palay2.rf)
predictions2 = predict(palay2.rf, newdata=topredict2)
print(predictions2)
predicted2 <- topredict2
predicted2$VOLUMEOFPRODUCTION <- predictions2
print(predicted2)
palay3 <- rbind(palay2,predicted2)
print(palay3)
topredict3 <- DataSetPredict[41:60,]
topredict3$GEOLOCATION <- as.factor(topredict3$GEOLOCATION)
topredict3$YEAR <- as.integer(topredict3$YEAR)
topredict3$QUARTER <- as.factor(topredict3$QUARTER)
topredict3[is.na(topredict3)] = 0
print(topredict3)
palay3.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay3, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
print(palay3.rf)
plot(palay3.rf)
predictions3 = predict(palay3.rf, newdata=topredict3)
print(predictions3)
predicted3 <- topredict3
predicted3$VOLUMEOFPRODUCTION <- predictions3
print(predicted3)
palay4 <- rbind(palay3,predicted3)
print(palay4)
topredict4 <- DataSetPredict[61:80,]
topredict4$GEOLOCATION <- as.factor(topredict4$GEOLOCATION)
topredict4$YEAR <- as.integer(topredict4$YEAR)
topredict4$QUARTER <- as.factor(topredict4$QUARTER)
topredict4[is.na(topredict4)] = 0
print(topredict4)
palay4.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay4, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
print(palay4.rf)
plot(palay4.rf)
predictions4 = predict(palay4.rf, newdata=topredict4)
print(predictions4)
predicted4 <- topredict4
predicted4$VOLUMEOFPRODUCTION <- predictions4
print(predicted4)
palay5 <- rbind(palay4,predicted4)
print(palay5)
topredict5 <- DataSetPredict[81:100,]
topredict5$GEOLOCATION <- as.factor(topredict5$GEOLOCATION)
topredict5$YEAR <- as.integer(topredict5$YEAR)
topredict5$QUARTER <- as.factor(topredict5$QUARTER)
topredict5[is.na(topredict5)] = 0
print(topredict5)
palay5.rf <- randomForest(VOLUMEOFPRODUCTION ~ ., data=palay5, ntree=500,
mtry=2, importance=TRUE, na.action = na.omit)
print(palay5.rf)
plot(palay5.rf)
predictions5 = predict(palay5.rf, newdata=topredict5)
print(predictions5)
predicted5 <- topredict5
predicted5$VOLUMEOFPRODUCTION <- predictions5
print(predicted5)
palay6 <- rbind(palay5,predicted5)
print(palay6)
onlypredicted <- palay6[681:780,]
barplot(onlypredicted$VOLUMEOFPRODUCTION, onlypredicted$YEAR)
plot(palay.rf)
plot(palay2.rf)
plot(palay5.rf$rsq)
plot(palay5.rf$mse)
plot(palay2.rf)
plot(palay5.rf$mse)
plot(palay2.rf)
plot(palay5.rf$mse, type ="o")
plot(palay5.rf$mse, type =".")
palay5.rf$rsq
summary(palay5.rf$rsq)
library(Metrics)
mape(predictions5, test)
View(palay.rf)
View(palay)
palay.rf$rsq
summary(palay.rf$rsq)
mape(predicted1,topredict)
mape(topredict,predicted1)
mape(test,predicted)
mape(predicted,test)
mape(predicted,test$VOLUMEOFPRODUCTION)
mape(predicted,topredict$VOLUMEOFPRODUCTION)
predicted
topredict
DataSetTesting
View(DataSetTesting)
View(DM_DataCleaningFinal)
View(DataSetTraining)
View(DataSetTesting)
test
View(predicted)
View(test)
mape(test$VOLUMEOFPRODUCTION,palay$VOLUMEOFPRODUCTION)
predictions1
mape(predictions1,test$VOLUMEOFPRODUCTION)
mape(predictions5,test$VOLUMEOFPRODUCTION)
plot(palay.rf)
plot(palay.rf$rsq)
plot(palay.rf$rsq,xlabel = "Trees")
plot(palay.rf$rsq,xlab = "Trees")
plot(palay.rf$rsq,xlab = "Trees",ylab ="RSquared")
plot(test$QUARTER,test$VOLUMEOFPRODUCTION,xlab = "Quarter", ylab = "Volume Production")
plot(test$QUARTER,test$VOLUMEOFPRODUCTION,xlab = "QUARTER", ylab = "VOLUME OF PRODUCTION")
plot(palay.rf$rsq,xlab = "TREES",ylab ="RSQUARED")
plot(palay.rf$rsq,xlab = "TREES",ylab = "ERROR")
plot(palay.rf,xlab = "TREES",ylab = "ERROR")
plot(palay.rf,xlab = "TREES",ylab = "ERROR")
plot(palay.rf)
plot(palay.rf,xlab = "TREES")
plot(palay.rf,xlab = "ERROR")
plot(palay.rf,xlab = "TREES")
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$VOLUMEOFPRODUCTION,test$GEOLOCATION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
test$GEOLOCATION = as.factor((test$GEOLOCATION))
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$VOLUMEOFPRODUCTION,test$GEOLOCATION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
barplot(test$VOLUMEOFPRODUCTION,test$GEOLOCATION,xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION")
plot(test$GEOLOCATION)
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION", fontsize = "12")
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION", fontsize = "10")
plot(test$GEOLOCATION,test$VOLUMEOFPRODUCTION,type = "o",xlab = "GEOLOCATION",ylab = "VOLUME OF PRODUCTION", fontsize = "5")
plot(test$YEAR,test$VOLUMEOFPRODUCTION)
barplot(test$YEAR,test$VOLUMEOFPRODUCTION)
barplot(test$VOLUMEOFPRODUCTION,test$YEAR)
barplot(test$VOLUMEOFPRODUCTION,test$YEAR,xlab = "YEAR", ylab = "VOLUME OF PRODUCTION")
predictions5
predicted5
predicted5ys <- rbind(predicted,predicted2)
predicted5ys <- rbind(predicted5ys,predicted3)
predicted5ys
View(predicted5)
View(predicted5ys)
predicted5ys <- rbind(predicted5ys,predicted4)
predicted5ys <- rbind(predicted5ys,predicted5)
View(predicted5ys)
plot(predicted5ys)
plot(predicted5ys$QUARTER,predicted5ys$VOLUMEOFPRODUCTION)
barplot(predicted5ys$QUARTER,predicted5ys$VOLUMEOFPRODUCTION)
barplot(predicted5ys$VOLUMEOFPRODUCTION,predicted5ys$QUARTER)
plot(predicted5ys$QUARTER,predicted5ys$VOLUMEOFPRODUCTION)
plot(predicted5ys$QUARTER,predicted5ys$VOLUMEOFPRODUCTION,xlab = "QUARTER",ylab = "VOLUME OF PRODUCTION")
plot(predicted5ys$YEAR,predicted5ys$VOLUMEOFPRODUCTION,xlab = "QUARTER",ylab = "VOLUME OF PRODUCTION")
barplot(predicted5ys$YEAR,predicted5ys$VOLUMEOFPRODUCTION,xlab = "QUARTER",ylab = "VOLUME OF PRODUCTION")
barplot(predicted5ys$VOLUMEOFPRODUCTION,predicted5ys$YEAR,xlab = "QUARTER",ylab = "VOLUME OF PRODUCTION")
View(predicted5ys)
View(test)
View(palay.rf)
predict(palay.rf, newdata = test)
testpredict = predict(palay.rf, newdata = test)
testpredict
View(DM_DataCleaningFinal)
View(test)
write_xlsx(testpredict,"C:\Users\HP\Documents\RLanguage Projects testpredict.xlsx")
write_xlsx(testpredict,"C:\Users\HP\Documents\RLanguage Projects\\testpredict.xlsx")
write_xlsx(testpredict,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredict.xlsx")
write_csv(testpredict,"C:\Users\HP\Documents\RLanguage Projects\\testpredict.csv")
write.xlsx(testpredict,"C:\Users\HP\Documents\RLanguage Projects\\testpredict.xlsx")
write.csv(testpredict,"C:\Users\HP\Documents\RLanguage Projects\testpredict.csv")
write.csv(testpredict,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredict.csv")
write.csv(testpredict,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredict.csv",row.names = FALSE)
write.csv(testpredict,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredict.csv",row.names = TRUE)
write.csv(testpredict,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredict.csv",row.names = FALSE)
testpredict
testpredicted <- test$VOLUMEOFPRODUCTION
testpredicted$VOLUMEOFPRODUCTION <- testpredict
View(testpredicted)
testpredicted
testpredicted <- test
View(test)
testpredicted$VOLUMEOFPRODUCTION <- testpredict
View(testpredicted)
write.csv(testpredicted,"C:\\Users\\HP\\Documents\\RLanguage Projects\\testpredicted.csv",row.names = FALSE)
View(test)
